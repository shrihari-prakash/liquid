"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[579],{9420:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var t=n(4848),s=n(8453);const r={title:"Special Fields"},a=void 0,c={id:"fields-and-attributes/Special-Fields",title:"Special Fields",description:"These are fields that are readable by all delegated and admin APIs, but are not directly mutable by patch APIs. These instead require special set of APIs that have built-in rules.",source:"@site/docs/fields-and-attributes/Special-Fields.md",sourceDirName:"fields-and-attributes",slug:"/fields-and-attributes/Special-Fields",permalink:"/fields-and-attributes/Special-Fields",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Special Fields"},sidebar:"tutorialSidebar",previous:{title:"All Fields",permalink:"/fields-and-attributes/All-Fields"},next:{title:"Custom Data",permalink:"/fields-and-attributes/Custom-Data"}},l={},d=[{value:"Verifications",id:"verifications",level:2},{value:"Suspensions",id:"suspensions",level:2},{value:"Restricted Accounts",id:"restricted-accounts",level:2},{value:"Credits / Virtual Money",id:"credits--virtual-money",level:2},{value:"Subscriptions",id:"subscriptions",level:2}];function o(e){const i={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.p,{children:"These are fields that are readable by all delegated and admin APIs, but are not directly mutable by patch APIs. These instead require special set of APIs that have built-in rules."}),"\n",(0,t.jsx)(i.h2,{id:"verifications",children:"Verifications"}),"\n",(0,t.jsxs)(i.p,{children:["See verifications API usage ",(0,t.jsx)(i.a,{href:"/api-documentation/API-Documentation-Admin#verify-user",children:"here"}),". Verifications are exclusive to admin APIs."]}),"\n",(0,t.jsxs)(i.ol,{children:["\n",(0,t.jsx)(i.li,{children:"verified"}),"\n",(0,t.jsx)(i.li,{children:"verifiedDate"}),"\n",(0,t.jsx)(i.li,{children:"verifiedBy"}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"suspensions",children:"Suspensions"}),"\n",(0,t.jsxs)(i.p,{children:["See ban API usage ",(0,t.jsx)(i.a,{href:"/api-documentation/API-Documentation-Client#ban-user",children:"here"})," (Client API) and ",(0,t.jsx)(i.a,{href:"/api-documentation/API-Documentation-Admin#ban-user",children:"here"})," (Admin API)"]}),"\n",(0,t.jsxs)(i.ol,{children:["\n",(0,t.jsx)(i.li,{children:"isBanned"}),"\n",(0,t.jsx)(i.li,{children:"bannedDate"}),"\n",(0,t.jsx)(i.li,{children:"bannedBy"}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"restricted-accounts",children:"Restricted Accounts"}),"\n",(0,t.jsxs)(i.p,{children:["By default, Liquid does not use ",(0,t.jsx)(i.code,{children:"isRestricted"})," flag for anything at all. But this is a useful feature if you want to shadow ban a user. For instance, based on this flag, you could decide to restrict how often people see a user's post. See restrict API usage ",(0,t.jsx)(i.a,{href:"/api-documentation/API-Documentation-Client#restrict-user",children:"here"})," (Client API) and ",(0,t.jsx)(i.a,{href:"/api-documentation/API-Documentation-Admin#restrict-user",children:"here"})," (Admin API)"]}),"\n",(0,t.jsxs)(i.ol,{children:["\n",(0,t.jsx)(i.li,{children:"isRestricted"}),"\n",(0,t.jsx)(i.li,{children:"restrictedDate"}),"\n",(0,t.jsx)(i.li,{children:"restrictedBy"}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"credits--virtual-money",children:"Credits / Virtual Money"}),"\n",(0,t.jsxs)(i.p,{children:["Credits are usually similar to virtual money that you can use for controlling paid features. You can also use this as a reward points system. See usage ",(0,t.jsx)(i.a,{href:"/api-documentation/API-Documentation-Client#update-user-credits",children:"here"})," (Client API) and ",(0,t.jsx)(i.a,{href:"/api-documentation/API-Documentation-Admin#update-user-credits",children:"here"})," (Admin API)"]}),"\n",(0,t.jsxs)(i.ol,{children:["\n",(0,t.jsx)(i.li,{children:"credits"}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"subscriptions",children:"Subscriptions"}),"\n",(0,t.jsxs)(i.p,{children:["Subscription fields manage user subscription status, tiers, and cancellation information. See usage for managing subscriptions ",(0,t.jsx)(i.a,{href:"/api-documentation/API-Documentation-Client#manage-subscription",children:"here"})," (Client API) and ",(0,t.jsx)(i.a,{href:"/api-documentation/API-Documentation-Admin#manage-subscription",children:"here"})," (Admin API). See usage for cancelling subscriptions ",(0,t.jsx)(i.a,{href:"/api-documentation/API-Documentation-Client#cancel-subscription",children:"here"})," (Client API) and ",(0,t.jsx)(i.a,{href:"/api-documentation/API-Documentation-Admin#cancel-subscription",children:"here"})," (Admin API)"]}),"\n",(0,t.jsxs)(i.ol,{children:["\n",(0,t.jsx)(i.li,{children:"isSubscribed - Boolean indicating if the user has an active subscription"}),"\n",(0,t.jsx)(i.li,{children:'subscriptionTier - String representing the subscription tier (e.g., "basic", "premium")'}),"\n",(0,t.jsx)(i.li,{children:"subscriptionIdentifier - String or Number for external subscription tracking (e.g., payment system ID)"}),"\n",(0,t.jsx)(i.li,{children:"subscriptionActivatedAt - Date when the subscription was activated"}),"\n",(0,t.jsx)(i.li,{children:"subscriptionExpiry - Date when the subscription expires"}),"\n",(0,t.jsx)(i.li,{children:"subscriptionCancelled - Boolean indicating if the subscription has been cancelled"}),"\n",(0,t.jsx)(i.li,{children:"subscriptionCancelledAt - Date when the subscription was cancelled"}),"\n"]})]})}function u(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>a,x:()=>c});var t=n(6540);const s={},r=t.createContext(s);function a(e){const i=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(r.Provider,{value:i},e.children)}}}]);