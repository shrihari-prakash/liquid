[
  {
    "name": "environment",
    "displayName": "Environment",
    "envName": "NODE_ENV",
    "description": "Specifies the application environment. Possible values are 'development', 'production'",
    "type": "string",
    "default": "production"
  },
  {
    "name": "system.super-admin.username",
    "displayName": "Super Admin Username",
    "envName": "SYSTEM_SUPER_ADMIN_USERNAME",
    "description": "Username of the super admin user.",
    "type": "string",
    "relatedOptions": ["system.super-admin.*"]
  },
  {
    "name": "system.super-admin.password",
    "displayName": "Super Admin Password",
    "envName": "SYSTEM_SUPER_ADMIN_PASSWORD",
    "description": "Password of the super admin user.",
    "type": "string",
    "relatedOptions": ["system.super-admin.*"]
  },
  {
    "name": "system.super-admin.first-name",
    "displayName": "Super Admin First Name",
    "envName": "SYSTEM_SUPER_ADMIN_FIRST_NAME",
    "description": "First name of the super admin user.",
    "type": "string",
    "relatedOptions": ["system.super-admin.*"]
  },
  {
    "name": "system.super-admin.last-name",
    "displayName": "Super Admin Last Name",
    "envName": "SYSTEM_SUPER_ADMIN_LAST_NAME",
    "description": "Last name of the super admin user.",
    "type": "string",
    "relatedOptions": ["system.super-admin.*"]
  },
  {
    "name": "system.super-admin.email",
    "displayName": "Super Admin Email",
    "envName": "SYSTEM_SUPER_ADMIN_EMAIL",
    "description": "Email of the super admin user.",
    "type": "string",
    "relatedOptions": ["system.super-admin.*"]
  },
  {
    "name": "system.default-client.id",
    "displayName": "Default Client ID",
    "envName": "SYSTEM_DEFAULT_CLIENT_ID",
    "description": "Client ID of the default client.",
    "type": "string",
    "relatedOptions": ["system.default-client.*"]
  },
  {
    "name": "system.default-client.secret",
    "displayName": "Default Client Secret",
    "envName": "SYSTEM_DEFAULT_CLIENT_SECRET",
    "description": "Client secret of the default client.",
    "type": "string",
    "relatedOptions": ["system.default-client.*"]
  },
  {
    "name": "system.default-client.display-name",
    "displayName": "Default Client Display Name",
    "envName": "SYSTEM_DEFAULT_CLIENT_DISPLAY_NAME",
    "description": "Display name of the default client.",
    "type": "string",
    "relatedOptions": ["system.default-client.*"]
  },
  {
    "name": "system.default-client.redirect-uris",
    "displayName": "Default Client Redirect URIs",
    "envName": "SYSTEM_DEFAULT_CLIENT_REDIRECT_URIS",
    "description": "Redirect URIs of the default client.",
    "type": "stringArray",
    "default": ["http://localhost:2000", "http://localhost:2001"],
    "relatedOptions": ["system.default-client.*"]
  },
  {
    "name": "system.app-host",
    "displayName": "Application Host",
    "envName": "SYSTEM_APP_HOST",
    "description": "Hostname of Liquid",
    "type": "string",
    "default": "http://localhost:2000"
  },
  {
    "name": "system.enable-swagger",
    "displayName": "Enable Swagger",
    "envName": "SYSTEM_ENABLE_SWAGGER",
    "description": "Specifies if swagger UI is available. If enabled, swagger will be available on /docs",
    "type": "boolean",
    "default": false
  },
  {
    "name": "system.reverse-proxy-mode",
    "displayName": "Reverse Proxy Mode",
    "envName": "SYSTEM_REVERSE_PROXY_MODE",
    "description": "Specifies if Liquid is sitting behind a reverse proxy like nginx.",
    "type": "boolean",
    "default": false
  },
  {
    "name": "system.log-level",
    "displayName": "Log Level",
    "envName": "SYSTEM_LOG_LEVEL",
    "description": "Log level for the application. Possible values are debug, info, warn, error",
    "type": "string",
    "default": "debug"
  },
  {
    "name": "system.log-file-path",
    "displayName": "Log File Path",
    "envName": "SYSTEM_LOG_FILE_PATH",
    "description": "The log file path.",
    "type": "string"
  },
  {
    "name": "system.app-port",
    "displayName": "Application Port",
    "envName": "SYSTEM_APP_PORT",
    "description": "Port to listen on.",
    "type": "number",
    "default": 2000
  },
  {
    "name": "system.app-name",
    "displayName": "Application Name",
    "envName": "SYSTEM_APP_NAME",
    "description": "Name of the application.",
    "type": "string",
    "default": "Liquid"
  },
  {
    "name": "system.stats.enable-request-counting",
    "displayName": "Stats Enable Request Counting",
    "envName": "SYSTEM_STATS_ENABLE_REQUEST_COUNTING",
    "description": "Specifies if application should count the number of requests served since service was started and return it in stats API.",
    "type": "boolean",
    "default": false,
    "relatedOptions": ["system.stats.request-counter-key"]
  },
  {
    "name": "system.stats.request-counter-key",
    "displayName": "Stats Request Counter Key",
    "envName": "SYSTEM_STATS_REQUEST_COUNTER_KEY",
    "description": "Specifies the key to be used for storing and retrieving request count in express app.",
    "type": "string",
    "default": "liquid-request-count",
    "relatedOptions": ["system.stats.enable-request-counting"]
  },
  {
    "name": "system.request-body.json.max-size",
    "displayName": "System Request Body Max Size (JSON)",
    "envName": "SYSTEM_REQUEST_BODY_JSON_MAX_SIZE",
    "description": "Specifies maximum size limit for request body for JSON requests.",
    "type": "string",
    "default": "1mb"
  },
  {
    "name": "system.use-built-in-static-ui",
    "displayName": "Use Built-In Static UI",
    "envName": "SYSTEM_USE_BUILT_IN_STATIC UI",
    "description": "Specifies if Liquid can use it's built-in static UI. Turn this off if you are building your own login and signup pages.",
    "type": "boolean",
    "default": true
  },
  {
    "name": "system.static.app-config-file-path",
    "displayName": "Static App Config File Path",
    "envName": "SYSTEM_STATIC_APP_CONFIG_FILE_PATH",
    "description": "Specifies the file path for frontend configuration file. Defaults to the contents of https://github.com/shrihari-prakash/liquid/blob/main/src/public/configuration/app-config.sample.json.",
    "type": "string"
  },
  {
    "name": "system.service.app-config-file-path",
    "displayName": "Service App Config File Path",
    "envName": "SYSTEM_SERVICE_APP_CONFIG_FILE_PATH",
    "description": "Specifies the file path for backend configuration file.",
    "type": "string"
  },
  {
    "name": "system.scope-extension-file-path",
    "displayName": "Scope Extension File Path",
    "envName": "SYSTEM_SCOPE_EXTENSION_FILE_PATH",
    "description": "Specifies the path of the JSON file that contains array of scopes that need to be added to liquid in addition to the default ones.",
    "type": "string",
    "default": "/var/liquid/scope-extensions.json"
  },
  {
    "name": "system.enable-response-compression",
    "displayName": "Enable Response Compression",
    "envName": "SYSTEM_ENABLE_RESPONSE_COMPRESSION",
    "description": "Specifies if liquid can GZip HTTP responses.",
    "type": "boolean",
    "default": false
  },
  {
    "name": "system.iframe.action",
    "displayName": "Iframe Action",
    "envName": "SYSTEM_IFRAME_ACTION",
    "description": "Specifies the action to be taken when the application is loaded in an iframe. Possible values are `DENY`, `ALLOW`, `SAMEORIGIN`",
    "type": "string",
    "default": "SAMEORIGIN"
  },
  {
    "name": "system.roles.scan-interval",
    "displayName": "Roles Scan Interval",
    "envName": "SYSTEM_ROLES_SCAN_INTERVAL",
    "description": "Specifies the interval in seconds to scan for new roles.",
    "type": "number",
    "default": 300
  },
  {
    "name": "cookie.session-secret",
    "displayName": "Cookie Session Secret",
    "envName": "COOKIE_SESSION_SECRET",
    "description": "A random 64+ bit string to use as the session secret.",
    "type": "string",
    "default": "00000000-0000-0000-0000-000000000000"
  },
  {
    "name": "cookie.domain",
    "displayName": "Cookie Domain",
    "envName": "COOKIE_DOMAIN",
    "description": "Specifies the cookie domain for session cookies.",
    "type": "string"
  },
  {
    "name": "cookie.max-age",
    "displayName": "Cookie Max Age",
    "envName": "COOKIE_MAX_AGE",
    "description": "Specifies in seconds the expiry time for session cookies.",
    "type": "number"
  },
  {
    "name": "cookie.secure",
    "displayName": "Cookie Secure",
    "envName": "COOKIE_SECURE",
    "description": "Specifies if cookies sshould be secure.",
    "type": "boolean",
    "default": true
  },
  {
    "name": "mongo-db.connection-string",
    "displayName": "MongoDB Connection String",
    "envName": "MONGO_DB_CONNECTION_STRING",
    "description": "Connection string to connect to MongoDB.",
    "type": "string",
    "default": "mongodb://127.0.0.1:27017/accounts",
    "relatedOptions": ["mongo-db.use-transactions"]
  },
  {
    "name": "mongo-db.use-transactions",
    "displayName": "MongoDB Use Transactions",
    "envName": "MONGO_DB_USE_TRANSACTIONS",
    "description": "Specifies if application can use MongoDB transactions in APIs where multiple write operations are involved. Highly recommended that you turn this on if you have a replica set.",
    "type": "boolean",
    "default": false,
    "relatedOptions": ["mongo-db.connection-string"]
  },
  {
    "name": "oauth.authorization-code-lifetime",
    "displayName": "Authorization Code Lifetime",
    "envName": "OAUTH_AUTHORIZATION_CODE_LIFETIME",
    "description": "Expiry time in seconds for authorization codes.",
    "type": "number",
    "default": 300
  },
  {
    "name": "oauth.access-token-lifetime",
    "displayName": "Access Token Lifetime",
    "envName": "OAUTH_ACCESS_TOKEN_LIFETIME",
    "description": "Expiry time in seconds for access tokens.",
    "type": "number",
    "default": 3600
  },
  {
    "name": "oauth.refresh-token-lifetime",
    "displayName": "Refresh Token Lifetime",
    "envName": "OAUTH_REFRESH_TOKEN_LIFETIME",
    "description": "Expiry time in seconds for refresh tokens.",
    "type": "number",
    "default": 1209600
  },
  {
    "name": "oauth.authorization.enable-redirect",
    "displayName": "OAuth Authorization Enable Redirect",
    "envName": "OAUTH_AUTHORIZATION_ENABLE_REDIRECT",
    "description": "Specifies if the application should redirect to the specified URL upon successful authorization. If set to false, authorization code will be sent as a JSON response.",
    "type": "boolean",
    "default": true
  },
  {
    "name": "oauth.authorization.require-pkce",
    "displayName": "OAuth Authorization Require PKCE",
    "envName": "OAUTH_AUTHORIZATION_REQUIRE_PKCE",
    "description": "Specifies if the application should require PKCE for authorization.",
    "type": "boolean",
    "default": false
  },
  {
    "name": "system.email-adapter",
    "displayName": "System Email Adapter",
    "envName": "SYSTEM_EMAIL_ADAPTER",
    "description": "Specifies the adapter to use to send emails to users. Possible values are `nodemailer`, `sendgrid`, 'ses', `print`",
    "type": "string",
    "default": "sendgrid",
    "relatedOptions": ["nodemailer.*", "sendgrid.*"]
  },
  {
    "name": "nodemailer.service-name",
    "displayName": "Nodemailer Service Name",
    "envName": "NODEMAILER_SERVICE_NAME",
    "description": "Service name for nodemailer.",
    "type": "string",
    "relatedOptions": ["nodemailer.*", "system.email-adapter"]
  },
  {
    "name": "nodemailer.host",
    "displayName": "Nodemailer Host",
    "envName": "NODEMAILER_HOST",
    "description": "Host for nodemailer.",
    "type": "string",
    "relatedOptions": ["nodemailer.*", "system.email-adapter"]
  },
  {
    "name": "nodemailer.port",
    "displayName": "Nodemailer Port",
    "envName": "NODEMAILER_PORT",
    "description": "Port for nodemailer.",
    "type": "string",
    "relatedOptions": ["nodemailer.*", "system.email-adapter"]
  },
  {
    "name": "nodemailer.secure",
    "displayName": "Nodemailer Secure",
    "envName": "NODEMAILER_SECURE",
    "description": "Specifies if nodemailer should be secure.",
    "type": "boolean",
    "relatedOptions": ["nodemailer.*", "system.email-adapter"]
  },
  {
    "name": "nodemailer.username",
    "displayName": "Nodemailer Username",
    "envName": "NODEMAILER_USERNAME",
    "description": "Username for nodemailer.",
    "type": "string",
    "relatedOptions": ["nodemailer.*", "system.email-adapter"]
  },
  {
    "name": "nodemailer.password",
    "displayName": "Nodemailer Password",
    "envName": "NODEMAILER_PASSWORD",
    "description": "Password for nodemailer.",
    "type": "string",
    "relatedOptions": ["nodemailer.*", "system.email-adapter"]
  },
  {
    "name": "nodemailer.ciphers",
    "displayName": "Nodemailer Ciphers",
    "envName": "NODEMAILER_CIPHERS",
    "description": "Ciphers for nodemailer.",
    "type": "string",
    "default": "SSLv3",
    "relatedOptions": ["nodemailer.*", "system.email-adapter"]
  },
  {
    "name": "nodemailer.reject-unauthorized",
    "displayName": "Nodemailer Reject Unauthorized",
    "envName": "NODEMAILER_REJECT_UNAUTHORIZED",
    "description": "Specifies if nodemailer should reject unauthorized.",
    "type": "boolean",
    "default": false,
    "relatedOptions": ["nodemailer.*", "system.email-adapter"]
  },
  {
    "name": "sendgrid.api-key",
    "displayName": "Sendgrid API Key",
    "envName": "SENDGRID_API_KEY",
    "description": "API key for sendgrid.",
    "type": "string",
    "relatedOptions": ["sendgrid.*", "system.email-adapter"]
  },
  {
    "name": "sendgrid.verification-email-template-id",
    "displayName": "Sendgrid Verification Email Template ID",
    "envName": "SENDGRID_VERIFICATION_EMAIL_TEMPLATE_ID",
    "description": "Specifies the template ID of verification email template. Leave blank if you want to use plain text. Variables that will be replaced on template: `app_name`, `person_id`, `person_name`, `verification_code`",
    "type": "string",
    "default": "",
    "relatedOptions": ["sendgrid.*", "system.email-adapter"]
  },
  {
    "name": "aws.ses.region",
    "displayName": "AWS SES Region",
    "envName": "AWS_SES_REGION",
    "description": "AWS region for SES client.",
    "type": "string",
    "relatedOptions": ["aws.ses.access-key-id", "aws.ses.access-key-secret"]
  },
  {
    "name": "aws.ses.access-key-id",
    "displayName": "AWS SES Access Key ID",
    "envName": "AWS_SES_ACCESS_KEY_ID",
    "description": "AWS access key ID for SES client.",
    "type": "string",
    "relatedOptions": ["aws.ses.region", "aws.ses.access-key-secret"]
  },
  {
    "name": "aws.ses.access-key-secret",
    "displayName": "AWS SES Access Key Secret",
    "envName": "AWS_SES_ACCESS_KEY_SECRET",
    "description": "AWS access key secret for SES client.",
    "type": "string",
    "relatedOptions": ["aws.ses.region", "aws.ses.access-key-id"]
  },
  {
    "name": "email.outbound-address",
    "displayName": "Email Outbound Address",
    "envName": "EMAIL_OUTBOUND_ADDRESS",
    "description": "Email address to be used for outgoing emails from the system. This option is preferred over `sendgrid.outbound-email-address`",
    "type": "string",
    "default": "liquid@example.com",
    "relatedOptions": ["nodemailer.*", "sendgrid.*", "aws.ses.*", "system.email-adapter"]
  },
  {
    "name": "email.verification-template",
    "displayName": "Verification Email Template File Path",
    "envName": "EMAIL_VERIFICATION_TEMPLATE",
    "description": "Specifies the absolute path for the HTML template to be used for sending verification emails. Variables to be included in the template: `%app_name%`, `%person_id%`, `%person_name%`, `%verification_code%`. Ignore if you are using a Sendgrid template or the default verification template.",
    "type": "string"
  },
  {
    "name": "storage.cloud-path",
    "displayName": "Storage Cloud Path",
    "envName": "STORAGE_Cloud_PATH",
    "description": "Path to store user uploaded files.",
    "type": "string",
    "default": "content",
    "relatedOptions": ["privilege.can-use-cloud-storage", "s3.*"]
  },
  {
    "name": "s3.endpoint",
    "displayName": "S3 Endpoint",
    "envName": "S3_ENDPOINT",
    "description": "Endpoint to be used for S3 storage.",
    "type": "string",
    "relatedOptions": ["privilege.can-use-cloud-storage", "s3.*"]
  },
  {
    "name": "s3.access-key-id",
    "displayName": "S3 Access Key ID",
    "envName": "S3_ACCESS_KEY_ID",
    "description": "Access key ID to be used for S3 storage.",
    "type": "string",
    "relatedOptions": ["privilege.can-use-cloud-storage", "s3.*"]
  },
  {
    "name": "s3.access-key-secret",
    "displayName": "S3 Access Key Secret",
    "envName": "S3_ACCESS_KEY_SECRET",
    "description": "Access key secret to be used for S3 storage.",
    "type": "string",
    "relatedOptions": ["privilege.can-use-cloud-storage", "s3.*"]
  },
  {
    "name": "s3.bucket-name",
    "displayName": "S3 Bucket Name",
    "envName": "S3_BUCKET_NAME",
    "description": "Bucket name to be used for S3 storage.",
    "type": "string",
    "default": "liquid",
    "relatedOptions": ["privilege.can-use-cloud-storage", "s3.*"]
  },
  {
    "name": "s3.get-object-expiry",
    "displayName": "S3 Get Object Expiry",
    "envName": "S3_GET_OBJECT_EXPIRY",
    "description": "Expiry for getObject pre signed URLs.",
    "type": "number",
    "default": 3600,
    "relatedOptions": ["privilege.can-use-cloud-storage", "s3.*"]
  },
  {
    "name": "s3.put-object-expiry",
    "displayName": "S3 Put Object Expiry",
    "envName": "S3_PUT_OBJECT_EXPIRY",
    "description": "Expiry for putObject pre signed URLs.",
    "type": "number",
    "default": 3600,
    "relatedOptions": ["privilege.can-use-cloud-storage", "s3.*"]
  },
  {
    "name": "get-user-max-items",
    "displayName": "Get User API Max Items",
    "envName": "GET_USER_MAX_ITEMS",
    "description": "Specifies the maximum number of users for which details can be retrieved in a single API call.",
    "type": "number",
    "default": 650
  },
  {
    "name": "redis.port",
    "displayName": "Redis Port",
    "envName": "REDIS_PORT",
    "description": "Port for the Redis connection.",
    "type": "number",
    "default": 6379,
    "relatedOptions": ["privilege.can-use-cache", "redis.*"]
  },
  {
    "name": "redis.host",
    "displayName": "Redis Host",
    "envName": "REDIS_HOST",
    "description": "Host for the Redis connection.",
    "type": "string",
    "default": "127.0.0.1",
    "relatedOptions": ["privilege.can-use-cache", "redis.*"]
  },
  {
    "name": "redis.username",
    "displayName": "Redis Username",
    "envName": "REDIS_USERNAME",
    "description": "Username for the Redis connection.",
    "type": "string",
    "relatedOptions": ["privilege.can-use-cache", "redis.*"]
  },
  {
    "name": "redis.password",
    "displayName": "Redis Password",
    "envName": "REDIS_PASSWORD",
    "description": "Password for the Redis connection.",
    "type": "string",
    "relatedOptions": ["privilege.can-use-cache", "redis.*"]
  },
  {
    "name": "redis.db",
    "displayName": "Redis Database Number",
    "envName": "REDIS_DB",
    "description": "Password for the Redis connection.",
    "type": "number",
    "default": 0,
    "relatedOptions": ["privilege.can-use-cache", "redis.*"]
  },
  {
    "name": "redis.key-prefix",
    "displayName": "Redis Key Prefix",
    "envName": "REDIS_KEY_PREFIX",
    "description": "Key prefix for Redis keys.",
    "type": "string",
    "default": "liquid:",
    "relatedOptions": ["privilege.can-use-cache", "redis.*"]
  },
  {
    "name": "redis.channel-name",
    "displayName": "Redis Channel Name",
    "envName": "REDIS_CHANNEL_NAME",
    "description": "Channel name for Redis Publisher. Only set this if you use pusher events with Redis adapter.",
    "type": "string",
    "default": "liquid:",
    "relatedOptions": ["privilege.can-use-push-events", "privilege.can-use-cache", "redis.*"]
  },
  {
    "name": "system.queue-adapter",
    "displayName": "System Queue Adapter",
    "envName": "SYSTEM_QUEUE_ADAPTER",
    "description": "Specifies the queue adapter to use to send system events.",
    "type": "string",
    "default": "rabbitmq",
    "relatedOptions": ["privilege.can-use-push-events", "privilege.can-use-rabbitmq"]
  },
  {
    "name": "system.push-events",
    "displayName": "System Push Events",
    "envName": "SYSTEM_PUSH_EVENTS",
    "description": "Comma separated list of events in the format `event_class.event` that the system should push to queue. Related to `Can Use Push Events (privilege.can-use-push-events)`",
    "type": "stringArray",
    "default": "user.follow",
    "relatedOptions": ["privilege.can-use-push-events", "privilege.can-use-rabbitmq"]
  },
  {
    "name": "system.push-events.prefix",
    "displayName": "System Push Events Prefix",
    "envName": "SYSTEM_PUSH_EVENTS_PREFIX",
    "description": "Prefix to be used for push events send by Liquid.",
    "type": "string",
    "default": "liquid.",
    "relatedOptions": ["privilege.can-use-push-events", "privilege.can-use-rabbitmq"]
  },
  {
    "name": "rabbitmq.connectionString",
    "displayName": "RabbitMQ Connection String",
    "envName": "RABBITMQ_CONNECTION_STRING",
    "description": "Connection string for RabbitMQ connection.",
    "type": "string",
    "default": "amqp://localhost:5672",
    "relatedOptions": ["privilege.can-use-push-events", "privilege.can-use-rabbitmq"]
  },
  {
    "name": "rabbitmq.channel-name",
    "displayName": "RabbitMQ Channel Name",
    "envName": "RABBITMQ_CHANNEL_NAME",
    "description": "Channel name for RabbitMQ outbound events.",
    "type": "string",
    "default": "liquid-events",
    "relatedOptions": ["privilege.can-use-push-events", "privilege.can-use-rabbitmq"]
  },
  {
    "name": "cors.allowed-origins",
    "displayName": "Allowed Origins for CORS requests",
    "envName": "CORS_ALLOWED_ORIGINS",
    "description": "Allowed origins for CORS requests.",
    "type": "stringArray",
    "default": "http://localhost:3000"
  },
  {
    "name": "cors.scan-interval",
    "displayName": "CORS Scan Interval",
    "envName": "CORS_SCAN_INTERVAL",
    "description": "Interval in seconds to scan for new origins.",
    "type": "number",
    "default": 300
  },
  {
    "name": "privilege.can-use-cache",
    "displayName": "Can Use Cache",
    "envName": "CAN_USE_CACHE",
    "description": "Specifies whether to use cache for optimizing API response time.",
    "type": "boolean",
    "default": true,
    "relatedOptions": ["redis.*"]
  },
  {
    "name": "privilege.can-use-rabbitmq",
    "displayName": "Can Use RabbitMQ",
    "envName": "CAN_USE_RABBITMQ",
    "description": "Specifies whether system can use RabbitMQ.",
    "type": "boolean",
    "default": false,
    "relatedOptions": ["privilege.can-use-push-events"]
  },
  {
    "name": "privilege.can-use-push-events",
    "displayName": "Can Use Push Events",
    "envName": "CAN_USE_PUSH_EVENTS",
    "description": "Specifies if the system should publish certain events to RabbitMQ that can be used by external services.",
    "type": "boolean",
    "default": false,
    "relatedOptions": ["privilege.can-use-rabbitmq"]
  },
  {
    "name": "privilege.can-use-follow-apis",
    "displayName": "Can Use Follow APIs",
    "envName": "CAN_USE_FOLLOW_APIS",
    "description": "Specifies whether the application will allow users to use follow and unfollow mechanisms",
    "type": "boolean",
    "default": true
  },
  {
    "name": "privilege.can-use-profile-picture-apis",
    "displayName": "Can Use Profile Picture APIs",
    "envName": "CAN_USE_PROFILE_PICTURE_APIS",
    "description": "Specifies if users can use profile picture features. If enabled, you will require a S3 or S3-like cloud storage. Update options `Can Use Cloud Storage`, `S3 Access Key ID`, `S3 Access Key Secret`, `S3 Endpoint` and `S3 Bucket Name` along with this.",
    "type": "boolean",
    "default": false,
    "relatedOptions": ["privilege.can-use-cloud-storage"]
  },
  {
    "name": "privilege.can-use-delegated-user-search-api",
    "displayName": "Can Use User Search API (Delegated)",
    "envName": "CAN_USE_DELEGATED_USER_SEARCH_API",
    "description": "Specifies if users can search for other users in the system.",
    "type": "boolean",
    "default": true
  },
  {
    "name": "privilege.can-use-admin-user-search-api",
    "displayName": "Can Use User Search API (Admin)",
    "envName": "CAN_USE_ADMIN_USER_SEARCH_API",
    "description": "Specifies if admins can search for other users in the system.",
    "type": "boolean",
    "default": true
  },
  {
    "name": "privilege.can-use-cloud-storage",
    "displayName": "Can Use Cloud Storage",
    "envName": "CAN_USE_CLOUD_STORAGE",
    "description": "Specifies if the application can use cloud storage.",
    "type": "boolean",
    "default": false,
    "relatedOptions": ["s3.*"]
  },
  {
    "name": "privilege.can-use-phone-number",
    "displayName": "Can Use Phone Number On Signing Up",
    "envName": "CAN_USE_PHONE_NUMBER",
    "description": "Specifies if users can signup with phone numbers. Note that Liquid currently does not support verification of phone numbers. By default, all phone numbers are marked as unverified.",
    "type": "boolean",
    "default": false
  },
  {
    "name": "privilege.can-create-account",
    "displayName": "Can Use Create Account",
    "envName": "CAN_CREATE_ACCOUNT",
    "description": "Specifies if users can signup into the service. If false, users can be created using the bulk create api at `users/admin-api/create` or `users/client-api/create`.",
    "type": "boolean",
    "default": true
  },
  {
    "name": "privilege.can-reset-password",
    "displayName": "Can Reset Password",
    "envName": "CAN_RESET_PASSWORD",
    "description": "Specifies if users can reset their passwords using forgot password option.",
    "type": "boolean",
    "default": true
  },
  {
    "name": "privilege.can-use-credit-transaction-history",
    "displayName": "Can Use Credit Transaction History",
    "envName": "CAN_USE_CREDIT_TRANSACTION_HISTORY",
    "description": "Specifies if the application should maintain a history of credit changes for user accounts.",
    "type": "boolean",
    "default": false
  },
  {
    "name": "user.profile.username-validation-regex",
    "displayName": "User Profile Username Validation Regex",
    "envName": "USER_PROFILE_USERNAME_VALIDATION_REGEX",
    "description": "Specifies the regex to be used to validate username for user accounts.",
    "type": "string",
    "default": "^[a-z_][a-z0-9._]*$"
  },
  {
    "name": "user.profile.name-validation-regex",
    "displayName": "User Profile Name Validation Regex",
    "envName": "USER_PROFILE_NAME_VALIDATION_REGEX",
    "description": "Specifies the regex to be used to validate name for user accounts.",
    "type": "string",
    "default": "^[\\p{L}\\p{M}'-]+$"
  },
  {
    "name": "user.profile.password-validation-regex",
    "displayName": "User Profile Password Validation Regex",
    "envName": "USER_PROFILE_PASSWORD_VALIDATION_REGEX",
    "description": "Specifies the regex to be used to validate password for user accounts.",
    "type": "string"
  },
  {
    "name": "user.profile.custom-data.hydrate-in-delegated-mode",
    "displayName": "User Profile Custom Data Hydrate In Delegated Mode",
    "envName": "USER_PROFILE_CUSTOM_DATA_HYDRATE_IN_DELEGATED_MODE",
    "description": "Specifies if custom data has to be sent in delegated/general use APIs. This option does not hide custom data from admin and client APIs. For controlling custom data visibility in GET /user/me, the option `user.profile.custom-data.hydrate-in-self-retrieval` should be adjusted.",
    "type": "boolean",
    "default": false,
    "relatedOptions": ["user.profile.custom-data.hydrate-in-self-retrieval"]
  },
  {
    "name": "user.profile.custom-data.hydrate-in-self-retrieval",
    "displayName": "User Profile Custom Data Hydrate In Self Retrieval",
    "envName": "USER_PROFILE_CUSTOM_DATA_HYDRATE_IN_SELF_RETRIEVAL",
    "description": "Specifies if custom data has to be sent in while hitting GET /user/me. This option works independent of the value in option `user.profile.custom-data.hydrate-in-delegated-mode`.",
    "type": "boolean",
    "default": true,
    "relatedOptions": ["user.profile.custom-data.hydrate-in-delegated-mode"]
  },
  {
    "name": "user.login.history-record-expires-in",
    "displayName": "User Login History Record Expires In",
    "envName": "USER_LOGIN_HISTORY_RECORD_EXPIRES_IN",
    "description": "Specifies in seconds the amount of time after which login history records will expire. By default this data is stored for upto 24 hours.",
    "type": "number",
    "default": 86400
  },
  {
    "name": "user.login.record-successful-attempts",
    "displayName": "User Login Record Successful Attempts",
    "envName": "USER_LOGIN_RECORD_SUCCESSFUL_ATTEMPTS",
    "description": "Specifies if successful login attempts should be logged.",
    "type": "boolean",
    "default": true
  },
  {
    "name": "user.login.record-failed-attempts",
    "displayName": "User Login Record Failed Attempts",
    "envName": "USER_LOGIN_RECORD_FAILED_ATTEMPTS",
    "description": "Specifies if failed login attempts should be logged.",
    "type": "boolean",
    "default": true
  },
  {
    "name": "user.login.require-user-agent",
    "displayName": "User Login Require User Agent",
    "envName": "USER_LOGIN_REQUIRE_USER_AGENT",
    "description": "Specifies if user agent should be mandated in login requests.",
    "type": "boolean",
    "default": true
  },
  {
    "name": "user.account-creation.require-email-verification",
    "displayName": "User Account Creation Require Email Verification",
    "envName": "USER_ACCOUNT_CREATION_REQUIRE_EMAIL_VERIFICATION",
    "description": "Specifies if email verification is required while signing up in the service. Also modify `user.account-creation.require-email-verification` in your frontend app config.",
    "type": "boolean",
    "default": true,
    "relatedOptions": ["sendgrid.*"]
  },
  {
    "name": "user.account-creation.enable-invite-only",
    "displayName": "User Account Creation Enable Invite Only",
    "envName": "USER_ACCOUNT_CREATION_ENABLE_INVITE_ONLY",
    "description": "Specifies if accounts can be created only using an invite code.",
    "type": "boolean",
    "default": false,
    "relatedOptions": ["user.account-creation.invites-per-person"]
  },
  {
    "name": "user.account-creation.force-generate-invite-codes",
    "displayName": "User Account Creation Force Generate Invite Codes",
    "envName": "USER_ACCOUNT_CREATION_FORCE_GENERATE_INVITE_CODES",
    "description": "Specifies if the system can generate invite codes on account creation even if `user.account-creation.enable-invite-only` option is turned off.",
    "type": "boolean",
    "default": false,
    "relatedOptions": ["user.account-creation.enable-invite-only"]
  },
  {
    "name": "user.account-creation.invites-per-person",
    "displayName": "User Account Creation Invites Per Person",
    "envName": "USER_ACCOUNT_CREATION_INVITES_PER_PERSON",
    "description": "Specifies the number of invites a person can make.",
    "type": "number",
    "default": 5,
    "relatedOptions": ["user.account-creation.enable-invite-only"]
  },
  {
    "name": "invite-only.code-generation.max-limit-per-request",
    "displayName": "Invite Only Code Generation Max Limit Per Request",
    "envName": "INVITE_CODE_CODE_GENERATION_MAX_LIMIT_PER_REQUEST",
    "description": "Specifies the maximum number of invite codes that can be generated for a user per request from admin and client APIs.",
    "type": "number",
    "default": 15
  },
  {
    "name": "user.account-creation.invite-code-availability-window",
    "displayName": "User Account Creation Invite Code Availability Window",
    "envName": "USER_ACCOUNT_CREATION_INVITE_CODE_AVAILABILITY_WINDOW",
    "description": "Specifies the window size in seconds to have been ellapsed since user account creation after which users can get their invite codes.",
    "type": "number",
    "default": 10,
    "relatedOptions": ["user.account-creation.enable-invite-only"]
  },
  {
    "name": "user.account-creation.allow-only-whitelisted-email-domains",
    "displayName": "User Account Creation Allow Only Whitelisted Email Domains",
    "envName": "USER_ACCOUNT_CREATION_ALLOW_ONLY_WHITELISTED_EMAIL_DOMAINS",
    "description": "Specifies if account creation API should allow only the whitelisted email domains in email field.",
    "type": "boolean",
    "default": false,
    "relatedOptions": ["user.account-creation.whitelisted-email-domains"]
  },
  {
    "name": "user.account-creation.whitelisted-email-domains",
    "displayName": "User Account Creation Whitelisted Email Domains",
    "envName": "USER_ACCOUNT_CREATION_WHITELITED_EMAIL_DOMAINS",
    "description": "Comma separated list of domain names allowed for user sign up. Particularly useful to prevent users from using disposable emails.",
    "type": "stringArray",
    "default": "gmail.com,googlemail.com,outlook.com,live.com,live.fr,live.co.uk,live.nl,live.it,live.com.au,live.ca,hotmail.com,hotmail.co.uk,hotmail.fr,hotmail.it,hotmail.es,hotmail.de,yahoo.com,yahoo.fr,yahoo.co.uk,yahoo.com.br,yahoo.co.in,hotmail.de,rocketmail.com,yahoo.in,yahoo.ca,yahoo.com.au,yahoo.com.ar,yahoo.com.mx,yahoo.com.sg,mac.com,msn.com,icloud.com,mail.com,yandex.ru,proton.me,protonmail.com",
    "relatedOptions": ["user.account-creation.allow-only-whitelisted-email-domains"]
  },
  {
    "name": "user.account-creation.sanitize-gmail-addresses",
    "displayName": "User Account Creation Sanitize Gmail Addresses",
    "envName": "USER_ACCOUNT_CREATION_SANITIZE_GMAIL_ADDRESSES",
    "description": "Specifies if Gmail addresses should be sanitized before writing and reading from the database. This prevents users from creating duplicate accounts by inserting dots in their email. Check https://support.google.com/mail/answer/7436150 for more info.",
    "type": "boolean",
    "default": true
  },
  {
    "name": "user.account-creation.enable-ip-based-throttle",
    "displayName": "User Account Creation Enable IP Based Throttle",
    "envName": "USER_ACCOUNT_CREATION_ENABLE_IP_BASED_THROTTLE",
    "description": "Specifies if creating multiple accounts from the same IP should be throttled for a specified amount of time.",
    "type": "boolean",
    "default": false,
    "relatedOptions": ["user.account-creation.ip-based-throttle.window-size"]
  },
  {
    "name": "user.account-creation.ip-based-throttle.window-size",
    "displayName": "User Account Creation IP Based Throttle Window Size",
    "envName": "USER_ACCOUNT_CREATION_IP_BASED_THROTTLE_WINDOW_SIZE",
    "description": "Specifies the window size in seconds to throttle the account creation. Default is 24 hours.",
    "type": "number",
    "default": 86400,
    "relatedOptions": ["user.account-creation.enable-ip-based-throttle"]
  },
  {
    "name": "user.account-creation.initial-credit-count",
    "displayName": "User Account Creation Initial Credit Count",
    "envName": "USER_ACCOUNT_CREATION_INITIAL_CREDIT_COUNT",
    "description": "Specifies the initial amount of credits user accounts will have after creation.",
    "type": "number",
    "default": 0
  },
  {
    "name": "user.account-creation.default-scope",
    "displayName": "User Account Creation Default Scope",
    "envName": "USER_ACCOUNT_CREATION_DEFAULT_SCOPE",
    "description": "Comma separated list of scopes that should be assigned to users accounts when they are created.",
    "type": "stringArray",
    "default": "delegated:all"
  },
  {
    "name": "user.account-creation.custom-data.default-value",
    "displayName": "User Account Creation Custom Data Default Value",
    "envName": "USER_ACCOUNT_CREATION_CUSTOM_DATA_DEFAULT_VALUE",
    "description": "Valid JSON string that should be assigned to users account customData field when they are created.",
    "type": "string",
    "default": "{}"
  },
  {
    "name": "user.account-creation.verificaton-code-lifetime",
    "displayName": "User Account Creation Verificaton Code Lifetime",
    "envName": "USER_ACCOUNT_CREATION_VERIFICATION_CODE_LIFETIME",
    "description": "Expiry time in seconds for verification codes.",
    "type": "number",
    "default": 3600
  },
  {
    "name": "user.account-creation.sso.google.enabled",
    "displayName": "User Account Creation Enable Google SSO",
    "envName": "USER_ACCOUNT_CREATION_SSO_GOOGLE_ENABLED",
    "description": "Specifies if Google signon should be enabled.",
    "type": "boolean",
    "default": false
  },
  {
    "name": "user.account-creation.sso.google.client-id",
    "displayName": "User Account Creation Google SSO Client ID",
    "envName": "USER_ACCOUNT_CREATION_SSO_GOOGLE_CLIENT_ID",
    "description": "Specifies the client ID for Google SSO.",
    "type": "string"
  },
  {
    "name": "user.account-creation.sso.google.client-secret",
    "displayName": "User Account Creation Google SSO Client Secret",
    "envName": "USER_ACCOUNT_CREATION_SSO_GOOGLE_CLIENT_SECRET",
    "description": "Specifies the client secret for Google SSO.",
    "type": "string"
  },
  {
    "name": "user.login.sso.token-lifetime",
    "displayName": "User Login Google SSO Token Lifetime",
    "envName": "USER_LOGIN_SSO_GOOGLE_SSO_TOKEN_LIFETIME",
    "description": "Specifies the lifetime of the token generated by Google SSO login sesion in seconds.",
    "type": "nummber",
    "default": 600
  },
  {
    "name": "user.profile.editable-fields",
    "displayName": "Profile Editable Fields",
    "envName": "USER_PROFILE_EDITABLE_FIELDS",
    "description": "Comma specified list of fields that are editable by edit profile API.",
    "type": "stringArray",
    "default": "firstName,lastName,middleName,password,bio,pronouns,customLink,organization,gender,preferredLanguage"
  },
  {
    "name": "admin-api.user.profile.editable-fields",
    "displayName": "Profile Editable Fields (Admin API)",
    "envName": "ADMIN_API_USER_PROFILE_EDITABLE_FIELDS",
    "description": "Comma specified list of fields that are editable by edit profile API.",
    "type": "stringArray",
    "default": "username,email,password,isDeleted,role,firstName,lastName,middleName,bio,pronouns,customLink,organization,designation,gender,preferredLanguage,country"
  },
  {
    "name": "client-api.user.profile.editable-fields",
    "displayName": "Profile Editable Fields (Client API)",
    "envName": "CLIENT_API_USER_PROFILE_EDITABLE_FIELDS",
    "description": "Comma specified list of fields that are editable by edit profile API.",
    "type": "stringArray",
    "default": "username,email,password,isDeleted,role,firstName,lastName,middleName,bio,pronouns,customLink,organization,designation,gender,preferredLanguage,country"
  },
  {
    "name": "client.id-validation-regex",
    "displayName": "Client ID Validation Regex",
    "envName": "CLIENT_ID_VALIDATION_REGEX",
    "description": "Specifies the regex to be used to validate id for clients.",
    "type": "string",
    "default": "^[a-z_][a-z0-9._]*$"
  },
  {
    "name": "admin-api.user.profile.can-edit-peer-data",
    "displayName": "Profile Can Edit Peer Profile Data (Admin API)",
    "envName": "ADMIN_API_USER_PROFILE_CAN_EDIT_PEER_DATA",
    "description": "Specifies if roles with equal rank can edit profile data of each other.",
    "type": "boolean",
    "default": true
  },
  {
    "name": "user.search.search-fields",
    "displayName": "User Search Fields",
    "envName": "USER_SEARCH_SEARCH_FIELDS",
    "description": "Specifies the field names that can be used to search for users.",
    "type": "stringArray",
    "default": "username,firstName,lastName,email"
  },
  {
    "name": "user.search.strict-match-fields",
    "displayName": "User Search Strict Match Fields",
    "envName": "USER_SEARCH_STRICT_MATCH_FIELDS",
    "description": "Specifies the fields that should be returned only if the search query matches the string in the field exactly. The field should also be a part of `user.search.search-fields`.",
    "type": "stringArray",
    "default": ""
  },
  {
    "name": "privilege.user.search.can-use-id",
    "displayName": "Can Use ID for User Search",
    "envName": "USER_SEARCH_CAN_USE_ID",
    "description": "Specifies if _id field of records can be used to search for users.",
    "type": "boolean",
    "default": true
  },
  {
    "name": "privilege.user.search.can-use-fullname",
    "displayName": "Can Use Fullname for User Search",
    "envName": "USER_SEARCH_CAN_USE_FULLNAME",
    "description": "Specifies if firstName and lastName fields can be concatenated and used to search for users.",
    "type": "boolean",
    "default": true
  },
  {
    "name": "user.search-results.cache-lifetime",
    "displayName": "User Search Results Cache Lifetime",
    "envName": "USER_SEARCH_RESULTS_CACHE_LIFETIME",
    "description": "Specifies in seconds the amount of time for which results for a search query will be cached.",
    "type": "number",
    "default": 30,
    "relatedOptions": ["privilege.can-use-cache"]
  },
  {
    "name": "user.field-privacy.non-follower.hidden-fields",
    "displayName": "User Field Non-Follower Hidden Fields",
    "envName": "USER_FIELD_PRIVACY_NON_FOLLOWER_HIDDEN_FIELDS",
    "description": "Specifies fields that should be hidden when accounts are retrieved by people who are not following a user.",
    "type": "stringArray",
    "default": "email,phone,secondaryEmail,secondaryPhone,isBanned,credits,scope,restricted,customData"
  },
  {
    "name": "user.search-results.limit",
    "displayName": "User Search Results Limit",
    "envName": "USER_SEARCH_RESULTS_LIMIT",
    "description": "Specifies the maximum number of results to be returned in user search API.",
    "type": "number",
    "default": 10
  },
  {
    "name": "admin-api.user.search.search-fields",
    "displayName": "User Search Fields (Admin API)",
    "envName": "ADMIN_API_USER_SEARCH_SEARCH_FIELDS",
    "description": "Specifies the field names that can be used to search for users.",
    "type": "stringArray",
    "default": "username,firstName,lastName,email"
  },
  {
    "name": "admin-api.privilege.user.search.can-use-id",
    "displayName": "Can Use ID for User Search (Admin API)",
    "envName": "ADMIN_API_USER_SEARCH_CAN_USE_ID",
    "description": "Specifies if _id field of records can be used to search for users.",
    "type": "boolean",
    "default": true
  },
  {
    "name": "admin-api.privilege.user.search.can-use-fullname",
    "displayName": "Can Use Fullname for User Search (Admin API)",
    "envName": "ADMIN_API_USER_SEARCH_CAN_USE_FULLNAME",
    "description": "Specifies if firstName and lastName fields can be concatenated and used to search for users.",
    "type": "boolean",
    "default": true
  },
  {
    "name": "admin-api.user.search-results.cache-lifetime",
    "displayName": "User Search Results Cache Lifetime (Admin API)",
    "envName": "ADMIN_API_USER_SEARCH_RESULTS_CACHE_LIFETIME",
    "description": "Specifies in seconds the amount of time for which results for a search query will be cached.",
    "type": "number",
    "default": 30,
    "relatedOptions": ["privilege.can-use-cache"]
  },
  {
    "name": "admin-api.user.search-results.limit",
    "displayName": "User Search Results Limit (Admin API)",
    "envName": "ADMIN_API_USER_SEARCH_RESULTS_LIMIT",
    "description": "Specifies the maximum number of results to be returned in user search API.",
    "type": "number",
    "default": 10
  },
  {
    "name": "user.block-status.cache-lifetime",
    "displayName": "User Block Status Cache Lifetime",
    "envName": "USER_BLOCK_STATUS_CACHE_LIFETIME",
    "description": "Specifies in seconds the amount of time for which block status will be cached.",
    "type": "number",
    "default": 60,
    "relatedOptions": ["privilege.can-use-cache"]
  },
  {
    "name": "user.subscription.tier-list",
    "displayName": "User Subscription Tier List",
    "envName": "USER_SUBSCRIPTION_TIER_LIST",
    "description": "Comma separated list of subscription tier names.",
    "type": "stringArray",
    "default": "basic,premium"
  },
  {
    "name": "user.subscription.base-tier",
    "displayName": "User Subscription Base Tier",
    "envName": "USER_SUBSCRIPTION_BASE_TIER",
    "description": "Specifies the basic tier of the subscription. When a user's subscription expires, they will be reverted to the base tier.",
    "type": "string",
    "default": "basic"
  },
  {
    "name": "user.profile-picture.max-file-size",
    "displayName": "User Profile Picture Max File Size",
    "envName": "USER_PROFILE_PICTURE_MAX_FILE_SIZE",
    "description": "Specifies in bytes the max file size for user profile pictures.",
    "type": "number",
    "default": 500000
  },
  {
    "name": "user.profile-picture.signed-url.expiry",
    "displayName": "User Profile Picture Signed URL Expiry",
    "envName": "USER_PROFILE_PICTURE_SIGNED_URL_EXPIRY",
    "description": "Specifies in seconds the expiry time for user profile picture links.",
    "type": "number",
    "default": 14400
  },
  {
    "name": "pagination.default-limit",
    "displayName": "Pagination Default Limit",
    "envName": "PAGINATION_DEFAULT_LIMIT",
    "description": "Specifies the default number of results to be returned in paginated APIs",
    "type": "number",
    "default": 10
  },
  {
    "name": "pagination.max-limit",
    "displayName": "Pagination Max Limit",
    "envName": "PAGINATION_MAX_LIMIT",
    "description": "Specifies the maximum number of results to be returned in paginated APIs",
    "type": "number",
    "default": 1000
  },
  {
    "name": "system.rate-limit.window-size",
    "displayName": "Rate Limit Window Size",
    "envName": "SYSTEM_RATE_LIMIT_WINDOW_SIZE",
    "description": "Window size (in seconds) for rate limiting.",
    "type": "number",
    "default": 60
  },
  {
    "name": "system.rate-limit.light-api-max-limit",
    "displayName": "Light API Max Limit",
    "envName": "SYSTEM_RATE_LIMIT_LIGHT_API_MAX_LIMIT",
    "description": "Specifies the rate limit for light APIs for the specified window size.",
    "type": "number",
    "default": 75
  },
  {
    "name": "system.rate-limit.medium-api-max-limit",
    "displayName": "Medium API Max Limit",
    "envName": "SYSTEM_RATE_LIMIT_MEDIUM_API_MAX_LIMIT",
    "description": "Specifies the rate limit for medium APIs for the specified window size.",
    "type": "number",
    "default": 30
  },
  {
    "name": "system.rate-limit.heavy-api-max-limit",
    "displayName": "Heavy API Max Limit",
    "envName": "SYSTEM_RATE_LIMIT_HEAVY_API_MAX_LIMIT",
    "description": "Specifies the rate limit for heavy APIs for the specified window size.",
    "type": "number",
    "default": 10
  },
  {
    "name": "system.rate-limit.extreme-api-max-limit",
    "displayName": "Extreme API Max Limit",
    "envName": "SYSTEM_RATE_LIMIT_EXTREME_API_MAX_LIMIT",
    "description": "Specifies the rate limit for extreme APIs for the specified window size.",
    "type": "number",
    "default": 5
  },
  {
    "name": "system.rate-limit.count-by-route",
    "displayName": "Rate Limiter Count By Route",
    "envName": "SYSTEM_RATE_LIMIT_COUNT_BY_ROUTE",
    "description": "Specifies if the rate limit counter should be incremented per route per IP instead of just the IP. This means rate limit will be counted independendly for every API.",
    "type": "boolean",
    "default": true
  },
  {
    "name": "system.role.default",
    "displayName": "System Default Role",
    "envName": "SYSTEM_DEFAULT_ROLE",
    "description": "Specifies the default role to be used when users are signing up.",
    "type": "string",
    "default": "user"
  },
  {
    "name": "2fa.email.enabled",
    "displayName": "2FA Enabled",
    "envName": "2FA_EMAIL_ENABLED",
    "description": "Specifies if users can enable 2 factor authentication.",
    "type": "boolean",
    "default": false,
    "relatedOptions": ["2fa.email.enforce"]
  },
  {
    "name": "2fa.email.enforce",
    "displayName": "2FA Enforce",
    "envName": "2FA_EMAIL_ENFORCE",
    "description": "Specifies if users are enforced to authenticate with 2 factor authentication.",
    "type": "boolean",
    "default": false,
    "relatedOptions": ["2fa.email.enabled"]
  },
  {
    "name": "system.exposed-options",
    "displayName": "System Exposed Options",
    "envName": "SYSTEM_EXPOSED_OPTIONS",
    "description": "Comma separated list of options that a user can have access to after logging in. This will also include insecure settings.",
    "type": "stringArray",
    "default": [
      "system.app-name",
      "admin-api.user.profile.can-edit-peer-data",
      "pagination.default-limit",
      "pagination.max-limit",
      "user.account-creation.invites-per-person",
      "user.account-creation.invite-code-availability-window"
    ]
  },
  {
    "name": "system.exposed-options.insecure",
    "displayName": "System Exposed Options (Public)",
    "envName": "SYSTEM_EXPOSED_OPTIONS_INSECURE",
    "description": "Comma separated list of options that a user can have access to before logging in.",
    "type": "stringArray",
    "default": [
      "privilege.can-create-account",
      "privilege.can-use-phone-number",
      "user.account-creation.enable-invite-only",
      "user.account-creation.require-email-verification",
      "privilege.can-reset-password",
      "user.login.require-browser-info",
      "user.login.require-os-info",
      "user.account-creation.sso.google.enabled"
    ]
  }
]

